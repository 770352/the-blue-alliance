from _pytest.compat import TYPE_CHECKING as TYPE_CHECKING
from _pytest.config import UsageError as UsageError
from _pytest.nodes import Item as Item
from typing import Any

class MarkMapping:
    own_mark_names: Any = ...
    @classmethod
    def from_item(cls, item: Any): ...
    def __getitem__(self, name: Any): ...
    def __init__(self, own_mark_names: Any) -> None: ...
    def __ne__(self, other: Any) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...

class KeywordMapping:
    @classmethod
    def from_item(cls: Any, item: Item) -> KeywordMapping: ...
    def __getitem__(self, subname: str) -> bool: ...
    def __init__(self, names: Any) -> None: ...
    def __ne__(self, other: Any) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...

python_keywords_allowed_list: Any

def matchmark(colitem: Any, markexpr: Any): ...
def matchkeyword(colitem: Any, keywordexpr: Any): ...
