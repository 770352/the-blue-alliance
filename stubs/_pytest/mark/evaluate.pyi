from ..outcomes import TEST_OUTCOME as TEST_OUTCOME, fail as fail
from _pytest.config import Config as Config
from _pytest.store import StoreKey as StoreKey
from typing import Any, Dict, Optional

evalcache_key: Any

def cached_eval(config: Config, expr: str, d: Dict[str, object]) -> Any: ...

class MarkEvaluator:
    item: Any = ...
    def __init__(self, item: Any, name: Any) -> None: ...
    def __bool__(self): ...
    __nonzero__: Any = ...
    def wasvalid(self): ...
    def invalidraise(self, exc: Any): ...
    exc: Any = ...
    def istrue(self): ...
    def get(self, attr: Any, default: Optional[Any] = ...): ...
    def getexplanation(self): ...
